#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaReservaCine
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ReservaCine")]
	public partial class ReservaCineDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertBUTACA(BUTACA instance);
    partial void UpdateBUTACA(BUTACA instance);
    partial void DeleteBUTACA(BUTACA instance);
    partial void InsertTIPOMODALIDAD(TIPOMODALIDAD instance);
    partial void UpdateTIPOMODALIDAD(TIPOMODALIDAD instance);
    partial void DeleteTIPOMODALIDAD(TIPOMODALIDAD instance);
    partial void InsertCINE(CINE instance);
    partial void UpdateCINE(CINE instance);
    partial void DeleteCINE(CINE instance);
    partial void InsertCLIENTE(CLIENTE instance);
    partial void UpdateCLIENTE(CLIENTE instance);
    partial void DeleteCLIENTE(CLIENTE instance);
    partial void InsertEMPLEADO(EMPLEADO instance);
    partial void UpdateEMPLEADO(EMPLEADO instance);
    partial void DeleteEMPLEADO(EMPLEADO instance);
    partial void InsertFUNCION(FUNCION instance);
    partial void UpdateFUNCION(FUNCION instance);
    partial void DeleteFUNCION(FUNCION instance);
    partial void InsertFUNCIONENTRADA(FUNCIONENTRADA instance);
    partial void UpdateFUNCIONENTRADA(FUNCIONENTRADA instance);
    partial void DeleteFUNCIONENTRADA(FUNCIONENTRADA instance);
    partial void InsertGENERO(GENERO instance);
    partial void UpdateGENERO(GENERO instance);
    partial void DeleteGENERO(GENERO instance);
    partial void InsertPAIS(PAIS instance);
    partial void UpdatePAIS(PAIS instance);
    partial void DeletePAIS(PAIS instance);
    partial void InsertPELICULA(PELICULA instance);
    partial void UpdatePELICULA(PELICULA instance);
    partial void DeletePELICULA(PELICULA instance);
    partial void InsertRESERVA(RESERVA instance);
    partial void UpdateRESERVA(RESERVA instance);
    partial void DeleteRESERVA(RESERVA instance);
    partial void InsertSALA(SALA instance);
    partial void UpdateSALA(SALA instance);
    partial void DeleteSALA(SALA instance);
    partial void InsertSEXO(SEXO instance);
    partial void UpdateSEXO(SEXO instance);
    partial void DeleteSEXO(SEXO instance);
    partial void InsertTIPOCENSURA(TIPOCENSURA instance);
    partial void UpdateTIPOCENSURA(TIPOCENSURA instance);
    partial void DeleteTIPOCENSURA(TIPOCENSURA instance);
    partial void InsertTIPOCINE(TIPOCINE instance);
    partial void UpdateTIPOCINE(TIPOCINE instance);
    partial void DeleteTIPOCINE(TIPOCINE instance);
    partial void InsertTIPOEMPLEADO(TIPOEMPLEADO instance);
    partial void UpdateTIPOEMPLEADO(TIPOEMPLEADO instance);
    partial void DeleteTIPOEMPLEADO(TIPOEMPLEADO instance);
    partial void InsertTIPOENTRADA(TIPOENTRADA instance);
    partial void UpdateTIPOENTRADA(TIPOENTRADA instance);
    partial void DeleteTIPOENTRADA(TIPOENTRADA instance);
    partial void InsertDETALLERESERVA(DETALLERESERVA instance);
    partial void UpdateDETALLERESERVA(DETALLERESERVA instance);
    partial void DeleteDETALLERESERVA(DETALLERESERVA instance);
    #endregion
		
		public ReservaCineDataContext() : 
				base(global::SistemaReservaCine.Properties.Settings.Default.ReservaCineConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ReservaCineDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReservaCineDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReservaCineDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReservaCineDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BUTACA> BUTACA
		{
			get
			{
				return this.GetTable<BUTACA>();
			}
		}
		
		public System.Data.Linq.Table<TIPOMODALIDAD> TIPOMODALIDAD
		{
			get
			{
				return this.GetTable<TIPOMODALIDAD>();
			}
		}
		
		public System.Data.Linq.Table<CINE> CINE
		{
			get
			{
				return this.GetTable<CINE>();
			}
		}
		
		public System.Data.Linq.Table<CLIENTE> CLIENTE
		{
			get
			{
				return this.GetTable<CLIENTE>();
			}
		}
		
		public System.Data.Linq.Table<EMPLEADO> EMPLEADO
		{
			get
			{
				return this.GetTable<EMPLEADO>();
			}
		}
		
		public System.Data.Linq.Table<FUNCION> FUNCION
		{
			get
			{
				return this.GetTable<FUNCION>();
			}
		}
		
		public System.Data.Linq.Table<FUNCIONENTRADA> FUNCIONENTRADA
		{
			get
			{
				return this.GetTable<FUNCIONENTRADA>();
			}
		}
		
		public System.Data.Linq.Table<GENERO> GENERO
		{
			get
			{
				return this.GetTable<GENERO>();
			}
		}
		
		public System.Data.Linq.Table<PAIS> PAIS
		{
			get
			{
				return this.GetTable<PAIS>();
			}
		}
		
		public System.Data.Linq.Table<PELICULA> PELICULA
		{
			get
			{
				return this.GetTable<PELICULA>();
			}
		}
		
		public System.Data.Linq.Table<RESERVA> RESERVA
		{
			get
			{
				return this.GetTable<RESERVA>();
			}
		}
		
		public System.Data.Linq.Table<SALA> SALA
		{
			get
			{
				return this.GetTable<SALA>();
			}
		}
		
		public System.Data.Linq.Table<SEXO> SEXO
		{
			get
			{
				return this.GetTable<SEXO>();
			}
		}
		
		public System.Data.Linq.Table<TIPOCENSURA> TIPOCENSURA
		{
			get
			{
				return this.GetTable<TIPOCENSURA>();
			}
		}
		
		public System.Data.Linq.Table<TIPOCINE> TIPOCINE
		{
			get
			{
				return this.GetTable<TIPOCINE>();
			}
		}
		
		public System.Data.Linq.Table<TIPOEMPLEADO> TIPOEMPLEADO
		{
			get
			{
				return this.GetTable<TIPOEMPLEADO>();
			}
		}
		
		public System.Data.Linq.Table<TIPOENTRADA> TIPOENTRADA
		{
			get
			{
				return this.GetTable<TIPOENTRADA>();
			}
		}
		
		public System.Data.Linq.Table<DETALLERESERVA> DETALLERESERVA
		{
			get
			{
				return this.GetTable<DETALLERESERVA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BUTACA")]
	public partial class BUTACA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFUNCION;
		
		private int _IDBUTACA;
		
		private System.Nullable<int> _INDICEFILA;
		
		private System.Nullable<int> _INDICECOLUMNA;
		
		private System.Nullable<bool> _BLIBRE;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private EntityRef<FUNCION> _FUNCION;
		
		private EntityRef<FUNCION> _FUNCION1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFUNCIONChanging(int value);
    partial void OnIDFUNCIONChanged();
    partial void OnIDBUTACAChanging(int value);
    partial void OnIDBUTACAChanged();
    partial void OnINDICEFILAChanging(System.Nullable<int> value);
    partial void OnINDICEFILAChanged();
    partial void OnINDICECOLUMNAChanging(System.Nullable<int> value);
    partial void OnINDICECOLUMNAChanged();
    partial void OnBLIBREChanging(System.Nullable<bool> value);
    partial void OnBLIBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public BUTACA()
		{
			this._FUNCION = default(EntityRef<FUNCION>);
			this._FUNCION1 = default(EntityRef<FUNCION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFUNCION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFUNCION
		{
			get
			{
				return this._IDFUNCION;
			}
			set
			{
				if ((this._IDFUNCION != value))
				{
					if ((this._FUNCION.HasLoadedOrAssignedValue || this._FUNCION1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFUNCIONChanging(value);
					this.SendPropertyChanging();
					this._IDFUNCION = value;
					this.SendPropertyChanged("IDFUNCION");
					this.OnIDFUNCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBUTACA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDBUTACA
		{
			get
			{
				return this._IDBUTACA;
			}
			set
			{
				if ((this._IDBUTACA != value))
				{
					this.OnIDBUTACAChanging(value);
					this.SendPropertyChanging();
					this._IDBUTACA = value;
					this.SendPropertyChanged("IDBUTACA");
					this.OnIDBUTACAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INDICEFILA", DbType="Int")]
		public System.Nullable<int> INDICEFILA
		{
			get
			{
				return this._INDICEFILA;
			}
			set
			{
				if ((this._INDICEFILA != value))
				{
					this.OnINDICEFILAChanging(value);
					this.SendPropertyChanging();
					this._INDICEFILA = value;
					this.SendPropertyChanged("INDICEFILA");
					this.OnINDICEFILAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INDICECOLUMNA", DbType="Int")]
		public System.Nullable<int> INDICECOLUMNA
		{
			get
			{
				return this._INDICECOLUMNA;
			}
			set
			{
				if ((this._INDICECOLUMNA != value))
				{
					this.OnINDICECOLUMNAChanging(value);
					this.SendPropertyChanging();
					this._INDICECOLUMNA = value;
					this.SendPropertyChanged("INDICECOLUMNA");
					this.OnINDICECOLUMNAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLIBRE", DbType="Bit")]
		public System.Nullable<bool> BLIBRE
		{
			get
			{
				return this._BLIBRE;
			}
			set
			{
				if ((this._BLIBRE != value))
				{
					this.OnBLIBREChanging(value);
					this.SendPropertyChanging();
					this._BLIBRE = value;
					this.SendPropertyChanged("BLIBRE");
					this.OnBLIBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FUNCION_BUTACA", Storage="_FUNCION", ThisKey="IDFUNCION", OtherKey="IDFUNCION", IsForeignKey=true)]
		public FUNCION FUNCION
		{
			get
			{
				return this._FUNCION.Entity;
			}
			set
			{
				FUNCION previousValue = this._FUNCION.Entity;
				if (((previousValue != value) 
							|| (this._FUNCION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FUNCION.Entity = null;
						previousValue.BUTACA.Remove(this);
					}
					this._FUNCION.Entity = value;
					if ((value != null))
					{
						value.BUTACA.Add(this);
						this._IDFUNCION = value.IDFUNCION;
					}
					else
					{
						this._IDFUNCION = default(int);
					}
					this.SendPropertyChanged("FUNCION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FUNCION_BUTACA1", Storage="_FUNCION1", ThisKey="IDFUNCION", OtherKey="IDFUNCION", IsForeignKey=true)]
		public FUNCION FUNCION1
		{
			get
			{
				return this._FUNCION1.Entity;
			}
			set
			{
				FUNCION previousValue = this._FUNCION1.Entity;
				if (((previousValue != value) 
							|| (this._FUNCION1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FUNCION1.Entity = null;
						previousValue.BUTACA1.Remove(this);
					}
					this._FUNCION1.Entity = value;
					if ((value != null))
					{
						value.BUTACA1.Add(this);
						this._IDFUNCION = value.IDFUNCION;
					}
					else
					{
						this._IDFUNCION = default(int);
					}
					this.SendPropertyChanged("FUNCION1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOMODALIDAD")]
	public partial class TIPOMODALIDAD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOMODALIDAD;
		
		private string _NOMBRE;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private EntitySet<EMPLEADO> _EMPLEADO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOMODALIDADChanging(int value);
    partial void OnIDTIPOMODALIDADChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public TIPOMODALIDAD()
		{
			this._EMPLEADO = new EntitySet<EMPLEADO>(new Action<EMPLEADO>(this.attach_EMPLEADO), new Action<EMPLEADO>(this.detach_EMPLEADO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOMODALIDAD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTIPOMODALIDAD
		{
			get
			{
				return this._IDTIPOMODALIDAD;
			}
			set
			{
				if ((this._IDTIPOMODALIDAD != value))
				{
					this.OnIDTIPOMODALIDADChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOMODALIDAD = value;
					this.SendPropertyChanged("IDTIPOMODALIDAD");
					this.OnIDTIPOMODALIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOMODALIDAD_EMPLEADO", Storage="_EMPLEADO", ThisKey="IDTIPOMODALIDAD", OtherKey="IDTIPOMODALIDAD")]
		public EntitySet<EMPLEADO> EMPLEADO
		{
			get
			{
				return this._EMPLEADO;
			}
			set
			{
				this._EMPLEADO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLEADO(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.TIPOMODALIDAD = this;
		}
		
		private void detach_EMPLEADO(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.TIPOMODALIDAD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CINE")]
	public partial class CINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCINE;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _IDTIPOCINE;
		
		private string _DIRECCION;
		
		private System.Nullable<System.DateTime> _FECHAAPERTURA;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<FUNCION> _FUNCION;
		
		private EntitySet<SALA> _SALA;
		
		private EntityRef<TIPOCINE> _TIPOCINE;
		
		private EntityRef<TIPOCINE> _TIPOCINE1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCINEChanging(int value);
    partial void OnIDCINEChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnIDTIPOCINEChanging(System.Nullable<int> value);
    partial void OnIDTIPOCINEChanged();
    partial void OnDIRECCIONChanging(string value);
    partial void OnDIRECCIONChanged();
    partial void OnFECHAAPERTURAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAAPERTURAChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public CINE()
		{
			this._FUNCION = new EntitySet<FUNCION>(new Action<FUNCION>(this.attach_FUNCION), new Action<FUNCION>(this.detach_FUNCION));
			this._SALA = new EntitySet<SALA>(new Action<SALA>(this.attach_SALA), new Action<SALA>(this.detach_SALA));
			this._TIPOCINE = default(EntityRef<TIPOCINE>);
			this._TIPOCINE1 = default(EntityRef<TIPOCINE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCINE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCINE
		{
			get
			{
				return this._IDCINE;
			}
			set
			{
				if ((this._IDCINE != value))
				{
					this.OnIDCINEChanging(value);
					this.SendPropertyChanging();
					this._IDCINE = value;
					this.SendPropertyChanged("IDCINE");
					this.OnIDCINEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOCINE", DbType="Int")]
		public System.Nullable<int> IDTIPOCINE
		{
			get
			{
				return this._IDTIPOCINE;
			}
			set
			{
				if ((this._IDTIPOCINE != value))
				{
					if ((this._TIPOCINE.HasLoadedOrAssignedValue || this._TIPOCINE1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOCINEChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOCINE = value;
					this.SendPropertyChanged("IDTIPOCINE");
					this.OnIDTIPOCINEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECCION", DbType="VarChar(200)")]
		public string DIRECCION
		{
			get
			{
				return this._DIRECCION;
			}
			set
			{
				if ((this._DIRECCION != value))
				{
					this.OnDIRECCIONChanging(value);
					this.SendPropertyChanging();
					this._DIRECCION = value;
					this.SendPropertyChanged("DIRECCION");
					this.OnDIRECCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAAPERTURA", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHAAPERTURA
		{
			get
			{
				return this._FECHAAPERTURA;
			}
			set
			{
				if ((this._FECHAAPERTURA != value))
				{
					this.OnFECHAAPERTURAChanging(value);
					this.SendPropertyChanging();
					this._FECHAAPERTURA = value;
					this.SendPropertyChanged("FECHAAPERTURA");
					this.OnFECHAAPERTURAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CINE_FUNCION", Storage="_FUNCION", ThisKey="IDCINE", OtherKey="IDCINE")]
		public EntitySet<FUNCION> FUNCION
		{
			get
			{
				return this._FUNCION;
			}
			set
			{
				this._FUNCION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CINE_SALA", Storage="_SALA", ThisKey="IDCINE", OtherKey="IDCINE")]
		public EntitySet<SALA> SALA
		{
			get
			{
				return this._SALA;
			}
			set
			{
				this._SALA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOCINE_CINE", Storage="_TIPOCINE", ThisKey="IDTIPOCINE", OtherKey="IDTIPOCINE", IsForeignKey=true)]
		public TIPOCINE TIPOCINE
		{
			get
			{
				return this._TIPOCINE.Entity;
			}
			set
			{
				TIPOCINE previousValue = this._TIPOCINE.Entity;
				if (((previousValue != value) 
							|| (this._TIPOCINE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOCINE.Entity = null;
						previousValue.CINE.Remove(this);
					}
					this._TIPOCINE.Entity = value;
					if ((value != null))
					{
						value.CINE.Add(this);
						this._IDTIPOCINE = value.IDTIPOCINE;
					}
					else
					{
						this._IDTIPOCINE = default(Nullable<int>);
					}
					this.SendPropertyChanged("TIPOCINE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOCINE_CINE1", Storage="_TIPOCINE1", ThisKey="IDTIPOCINE", OtherKey="IDTIPOCINE", IsForeignKey=true)]
		public TIPOCINE TIPOCINE1
		{
			get
			{
				return this._TIPOCINE1.Entity;
			}
			set
			{
				TIPOCINE previousValue = this._TIPOCINE1.Entity;
				if (((previousValue != value) 
							|| (this._TIPOCINE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOCINE1.Entity = null;
						previousValue.CINE1.Remove(this);
					}
					this._TIPOCINE1.Entity = value;
					if ((value != null))
					{
						value.CINE1.Add(this);
						this._IDTIPOCINE = value.IDTIPOCINE;
					}
					else
					{
						this._IDTIPOCINE = default(Nullable<int>);
					}
					this.SendPropertyChanged("TIPOCINE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FUNCION(FUNCION entity)
		{
			this.SendPropertyChanging();
			entity.CINE = this;
		}
		
		private void detach_FUNCION(FUNCION entity)
		{
			this.SendPropertyChanging();
			entity.CINE = null;
		}
		
		private void attach_SALA(SALA entity)
		{
			this.SendPropertyChanging();
			entity.CINE = this;
		}
		
		private void detach_SALA(SALA entity)
		{
			this.SendPropertyChanging();
			entity.CINE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENTE")]
	public partial class CLIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCLIENTE;
		
		private string _DNICLIENTE;
		
		private string _NOMBRE;
		
		private string _APPATERNO;
		
		private string _APMATERNO;
		
		private System.Nullable<System.DateTime> _FECHANAC;
		
		private string _DIRECCION;
		
		private string _TELEFONOFIJO;
		
		private string _TELEFONOCELULAR;
		
		private System.Nullable<int> _IDSEXO;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private EntitySet<RESERVA> _RESERVA;
		
		private EntitySet<DETALLERESERVA> _DETALLERESERVA;
		
		private EntityRef<SEXO> _SEXO;
		
		private EntityRef<SEXO> _SEXO1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCLIENTEChanging(int value);
    partial void OnIDCLIENTEChanged();
    partial void OnDNICLIENTEChanging(string value);
    partial void OnDNICLIENTEChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnAPPATERNOChanging(string value);
    partial void OnAPPATERNOChanged();
    partial void OnAPMATERNOChanging(string value);
    partial void OnAPMATERNOChanged();
    partial void OnFECHANACChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHANACChanged();
    partial void OnDIRECCIONChanging(string value);
    partial void OnDIRECCIONChanged();
    partial void OnTELEFONOFIJOChanging(string value);
    partial void OnTELEFONOFIJOChanged();
    partial void OnTELEFONOCELULARChanging(string value);
    partial void OnTELEFONOCELULARChanged();
    partial void OnIDSEXOChanging(System.Nullable<int> value);
    partial void OnIDSEXOChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public CLIENTE()
		{
			this._RESERVA = new EntitySet<RESERVA>(new Action<RESERVA>(this.attach_RESERVA), new Action<RESERVA>(this.detach_RESERVA));
			this._DETALLERESERVA = new EntitySet<DETALLERESERVA>(new Action<DETALLERESERVA>(this.attach_DETALLERESERVA), new Action<DETALLERESERVA>(this.detach_DETALLERESERVA));
			this._SEXO = default(EntityRef<SEXO>);
			this._SEXO1 = default(EntityRef<SEXO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCLIENTE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCLIENTE
		{
			get
			{
				return this._IDCLIENTE;
			}
			set
			{
				if ((this._IDCLIENTE != value))
				{
					this.OnIDCLIENTEChanging(value);
					this.SendPropertyChanging();
					this._IDCLIENTE = value;
					this.SendPropertyChanged("IDCLIENTE");
					this.OnIDCLIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNICLIENTE", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DNICLIENTE
		{
			get
			{
				return this._DNICLIENTE;
			}
			set
			{
				if ((this._DNICLIENTE != value))
				{
					this.OnDNICLIENTEChanging(value);
					this.SendPropertyChanging();
					this._DNICLIENTE = value;
					this.SendPropertyChanged("DNICLIENTE");
					this.OnDNICLIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPATERNO", DbType="VarChar(50)")]
		public string APPATERNO
		{
			get
			{
				return this._APPATERNO;
			}
			set
			{
				if ((this._APPATERNO != value))
				{
					this.OnAPPATERNOChanging(value);
					this.SendPropertyChanging();
					this._APPATERNO = value;
					this.SendPropertyChanged("APPATERNO");
					this.OnAPPATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APMATERNO", DbType="VarChar(50)")]
		public string APMATERNO
		{
			get
			{
				return this._APMATERNO;
			}
			set
			{
				if ((this._APMATERNO != value))
				{
					this.OnAPMATERNOChanging(value);
					this.SendPropertyChanging();
					this._APMATERNO = value;
					this.SendPropertyChanged("APMATERNO");
					this.OnAPMATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHANAC", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHANAC
		{
			get
			{
				return this._FECHANAC;
			}
			set
			{
				if ((this._FECHANAC != value))
				{
					this.OnFECHANACChanging(value);
					this.SendPropertyChanging();
					this._FECHANAC = value;
					this.SendPropertyChanged("FECHANAC");
					this.OnFECHANACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECCION", DbType="VarChar(100)")]
		public string DIRECCION
		{
			get
			{
				return this._DIRECCION;
			}
			set
			{
				if ((this._DIRECCION != value))
				{
					this.OnDIRECCIONChanging(value);
					this.SendPropertyChanging();
					this._DIRECCION = value;
					this.SendPropertyChanged("DIRECCION");
					this.OnDIRECCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONOFIJO", DbType="VarChar(10)")]
		public string TELEFONOFIJO
		{
			get
			{
				return this._TELEFONOFIJO;
			}
			set
			{
				if ((this._TELEFONOFIJO != value))
				{
					this.OnTELEFONOFIJOChanging(value);
					this.SendPropertyChanging();
					this._TELEFONOFIJO = value;
					this.SendPropertyChanged("TELEFONOFIJO");
					this.OnTELEFONOFIJOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONOCELULAR", DbType="VarChar(10)")]
		public string TELEFONOCELULAR
		{
			get
			{
				return this._TELEFONOCELULAR;
			}
			set
			{
				if ((this._TELEFONOCELULAR != value))
				{
					this.OnTELEFONOCELULARChanging(value);
					this.SendPropertyChanging();
					this._TELEFONOCELULAR = value;
					this.SendPropertyChanged("TELEFONOCELULAR");
					this.OnTELEFONOCELULARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEXO", DbType="Int")]
		public System.Nullable<int> IDSEXO
		{
			get
			{
				return this._IDSEXO;
			}
			set
			{
				if ((this._IDSEXO != value))
				{
					if ((this._SEXO.HasLoadedOrAssignedValue || this._SEXO1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSEXOChanging(value);
					this.SendPropertyChanging();
					this._IDSEXO = value;
					this.SendPropertyChanged("IDSEXO");
					this.OnIDSEXOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_RESERVA", Storage="_RESERVA", ThisKey="IDCLIENTE", OtherKey="IDCLIENTE")]
		public EntitySet<RESERVA> RESERVA
		{
			get
			{
				return this._RESERVA;
			}
			set
			{
				this._RESERVA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_DETALLERESERVA", Storage="_DETALLERESERVA", ThisKey="IDCLIENTE", OtherKey="IDCLIENTE")]
		public EntitySet<DETALLERESERVA> DETALLERESERVA
		{
			get
			{
				return this._DETALLERESERVA;
			}
			set
			{
				this._DETALLERESERVA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEXO_CLIENTE", Storage="_SEXO", ThisKey="IDSEXO", OtherKey="IDSEXO", IsForeignKey=true)]
		public SEXO SEXO
		{
			get
			{
				return this._SEXO.Entity;
			}
			set
			{
				SEXO previousValue = this._SEXO.Entity;
				if (((previousValue != value) 
							|| (this._SEXO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SEXO.Entity = null;
						previousValue.CLIENTE.Remove(this);
					}
					this._SEXO.Entity = value;
					if ((value != null))
					{
						value.CLIENTE.Add(this);
						this._IDSEXO = value.IDSEXO;
					}
					else
					{
						this._IDSEXO = default(Nullable<int>);
					}
					this.SendPropertyChanged("SEXO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEXO_CLIENTE1", Storage="_SEXO1", ThisKey="IDSEXO", OtherKey="IDSEXO", IsForeignKey=true)]
		public SEXO SEXO1
		{
			get
			{
				return this._SEXO1.Entity;
			}
			set
			{
				SEXO previousValue = this._SEXO1.Entity;
				if (((previousValue != value) 
							|| (this._SEXO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SEXO1.Entity = null;
						previousValue.CLIENTE1.Remove(this);
					}
					this._SEXO1.Entity = value;
					if ((value != null))
					{
						value.CLIENTE1.Add(this);
						this._IDSEXO = value.IDSEXO;
					}
					else
					{
						this._IDSEXO = default(Nullable<int>);
					}
					this.SendPropertyChanged("SEXO1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RESERVA(RESERVA entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE = this;
		}
		
		private void detach_RESERVA(RESERVA entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE = null;
		}
		
		private void attach_DETALLERESERVA(DETALLERESERVA entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE = this;
		}
		
		private void detach_DETALLERESERVA(DETALLERESERVA entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLEADO")]
	public partial class EMPLEADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEMPLEADO;
		
		private string _NOMBREEMPLEADO;
		
		private string _APPATERNO;
		
		private string _APMATERNO;
		
		private System.Nullable<decimal> _SUELDO;
		
		private System.Nullable<System.DateTime> _FECHAINICIO;
		
		private System.Nullable<int> _IDTIPOMODALIDAD;
		
		private System.Nullable<int> _IDTIPOEMPLEADO;
		
		private string _USUARIO;
		
		private string _CONTRA;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private System.Nullable<bool> _BBLOQUEADO;
		
		private EntitySet<RESERVA> _RESERVA;
		
		private EntityRef<TIPOMODALIDAD> _TIPOMODALIDAD;
		
		private EntityRef<TIPOEMPLEADO> _TIPOEMPLEADO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEMPLEADOChanging(int value);
    partial void OnIDEMPLEADOChanged();
    partial void OnNOMBREEMPLEADOChanging(string value);
    partial void OnNOMBREEMPLEADOChanged();
    partial void OnAPPATERNOChanging(string value);
    partial void OnAPPATERNOChanged();
    partial void OnAPMATERNOChanging(string value);
    partial void OnAPMATERNOChanged();
    partial void OnSUELDOChanging(System.Nullable<decimal> value);
    partial void OnSUELDOChanged();
    partial void OnFECHAINICIOChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAINICIOChanged();
    partial void OnIDTIPOMODALIDADChanging(System.Nullable<int> value);
    partial void OnIDTIPOMODALIDADChanged();
    partial void OnIDTIPOEMPLEADOChanging(System.Nullable<int> value);
    partial void OnIDTIPOEMPLEADOChanged();
    partial void OnUSUARIOChanging(string value);
    partial void OnUSUARIOChanged();
    partial void OnCONTRAChanging(string value);
    partial void OnCONTRAChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    partial void OnBBLOQUEADOChanging(System.Nullable<bool> value);
    partial void OnBBLOQUEADOChanged();
    #endregion
		
		public EMPLEADO()
		{
			this._RESERVA = new EntitySet<RESERVA>(new Action<RESERVA>(this.attach_RESERVA), new Action<RESERVA>(this.detach_RESERVA));
			this._TIPOMODALIDAD = default(EntityRef<TIPOMODALIDAD>);
			this._TIPOEMPLEADO = default(EntityRef<TIPOEMPLEADO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEMPLEADO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDEMPLEADO
		{
			get
			{
				return this._IDEMPLEADO;
			}
			set
			{
				if ((this._IDEMPLEADO != value))
				{
					this.OnIDEMPLEADOChanging(value);
					this.SendPropertyChanging();
					this._IDEMPLEADO = value;
					this.SendPropertyChanged("IDEMPLEADO");
					this.OnIDEMPLEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREEMPLEADO", DbType="VarChar(50)")]
		public string NOMBREEMPLEADO
		{
			get
			{
				return this._NOMBREEMPLEADO;
			}
			set
			{
				if ((this._NOMBREEMPLEADO != value))
				{
					this.OnNOMBREEMPLEADOChanging(value);
					this.SendPropertyChanging();
					this._NOMBREEMPLEADO = value;
					this.SendPropertyChanged("NOMBREEMPLEADO");
					this.OnNOMBREEMPLEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPATERNO", DbType="VarChar(50)")]
		public string APPATERNO
		{
			get
			{
				return this._APPATERNO;
			}
			set
			{
				if ((this._APPATERNO != value))
				{
					this.OnAPPATERNOChanging(value);
					this.SendPropertyChanging();
					this._APPATERNO = value;
					this.SendPropertyChanged("APPATERNO");
					this.OnAPPATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APMATERNO", DbType="VarChar(50)")]
		public string APMATERNO
		{
			get
			{
				return this._APMATERNO;
			}
			set
			{
				if ((this._APMATERNO != value))
				{
					this.OnAPMATERNOChanging(value);
					this.SendPropertyChanging();
					this._APMATERNO = value;
					this.SendPropertyChanged("APMATERNO");
					this.OnAPMATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUELDO", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SUELDO
		{
			get
			{
				return this._SUELDO;
			}
			set
			{
				if ((this._SUELDO != value))
				{
					this.OnSUELDOChanging(value);
					this.SendPropertyChanging();
					this._SUELDO = value;
					this.SendPropertyChanged("SUELDO");
					this.OnSUELDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAINICIO", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHAINICIO
		{
			get
			{
				return this._FECHAINICIO;
			}
			set
			{
				if ((this._FECHAINICIO != value))
				{
					this.OnFECHAINICIOChanging(value);
					this.SendPropertyChanging();
					this._FECHAINICIO = value;
					this.SendPropertyChanged("FECHAINICIO");
					this.OnFECHAINICIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOMODALIDAD", DbType="Int")]
		public System.Nullable<int> IDTIPOMODALIDAD
		{
			get
			{
				return this._IDTIPOMODALIDAD;
			}
			set
			{
				if ((this._IDTIPOMODALIDAD != value))
				{
					if (this._TIPOMODALIDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOMODALIDADChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOMODALIDAD = value;
					this.SendPropertyChanged("IDTIPOMODALIDAD");
					this.OnIDTIPOMODALIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOEMPLEADO", DbType="Int")]
		public System.Nullable<int> IDTIPOEMPLEADO
		{
			get
			{
				return this._IDTIPOEMPLEADO;
			}
			set
			{
				if ((this._IDTIPOEMPLEADO != value))
				{
					if (this._TIPOEMPLEADO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOEMPLEADOChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOEMPLEADO = value;
					this.SendPropertyChanged("IDTIPOEMPLEADO");
					this.OnIDTIPOEMPLEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USUARIO", DbType="VarChar(18)")]
		public string USUARIO
		{
			get
			{
				return this._USUARIO;
			}
			set
			{
				if ((this._USUARIO != value))
				{
					this.OnUSUARIOChanging(value);
					this.SendPropertyChanging();
					this._USUARIO = value;
					this.SendPropertyChanged("USUARIO");
					this.OnUSUARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTRA", DbType="VarChar(64)")]
		public string CONTRA
		{
			get
			{
				return this._CONTRA;
			}
			set
			{
				if ((this._CONTRA != value))
				{
					this.OnCONTRAChanging(value);
					this.SendPropertyChanging();
					this._CONTRA = value;
					this.SendPropertyChanged("CONTRA");
					this.OnCONTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BBLOQUEADO", DbType="Bit")]
		public System.Nullable<bool> BBLOQUEADO
		{
			get
			{
				return this._BBLOQUEADO;
			}
			set
			{
				if ((this._BBLOQUEADO != value))
				{
					this.OnBBLOQUEADOChanging(value);
					this.SendPropertyChanging();
					this._BBLOQUEADO = value;
					this.SendPropertyChanged("BBLOQUEADO");
					this.OnBBLOQUEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADO_RESERVA", Storage="_RESERVA", ThisKey="IDEMPLEADO", OtherKey="IDEMPLEADO")]
		public EntitySet<RESERVA> RESERVA
		{
			get
			{
				return this._RESERVA;
			}
			set
			{
				this._RESERVA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOMODALIDAD_EMPLEADO", Storage="_TIPOMODALIDAD", ThisKey="IDTIPOMODALIDAD", OtherKey="IDTIPOMODALIDAD", IsForeignKey=true)]
		public TIPOMODALIDAD TIPOMODALIDAD
		{
			get
			{
				return this._TIPOMODALIDAD.Entity;
			}
			set
			{
				TIPOMODALIDAD previousValue = this._TIPOMODALIDAD.Entity;
				if (((previousValue != value) 
							|| (this._TIPOMODALIDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOMODALIDAD.Entity = null;
						previousValue.EMPLEADO.Remove(this);
					}
					this._TIPOMODALIDAD.Entity = value;
					if ((value != null))
					{
						value.EMPLEADO.Add(this);
						this._IDTIPOMODALIDAD = value.IDTIPOMODALIDAD;
					}
					else
					{
						this._IDTIPOMODALIDAD = default(Nullable<int>);
					}
					this.SendPropertyChanged("TIPOMODALIDAD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOEMPLEADO_EMPLEADO", Storage="_TIPOEMPLEADO", ThisKey="IDTIPOEMPLEADO", OtherKey="IDTIPOEMPLEADO", IsForeignKey=true)]
		public TIPOEMPLEADO TIPOEMPLEADO
		{
			get
			{
				return this._TIPOEMPLEADO.Entity;
			}
			set
			{
				TIPOEMPLEADO previousValue = this._TIPOEMPLEADO.Entity;
				if (((previousValue != value) 
							|| (this._TIPOEMPLEADO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOEMPLEADO.Entity = null;
						previousValue.EMPLEADO.Remove(this);
					}
					this._TIPOEMPLEADO.Entity = value;
					if ((value != null))
					{
						value.EMPLEADO.Add(this);
						this._IDTIPOEMPLEADO = value.IDTIPOEMPLEADO;
					}
					else
					{
						this._IDTIPOEMPLEADO = default(Nullable<int>);
					}
					this.SendPropertyChanged("TIPOEMPLEADO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RESERVA(RESERVA entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADO = this;
		}
		
		private void detach_RESERVA(RESERVA entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FUNCION")]
	public partial class FUNCION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFUNCION;
		
		private System.Nullable<System.DateTime> _FECHAFUNCION;
		
		private int _IDPELICULA;
		
		private int _IDCINE;
		
		private int _IDSALA;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private EntitySet<BUTACA> _BUTACA;
		
		private EntitySet<BUTACA> _BUTACA1;
		
		private EntitySet<FUNCIONENTRADA> _FUNCIONENTRADA;
		
		private EntitySet<DETALLERESERVA> _DETALLERESERVA;
		
		private EntityRef<CINE> _CINE;
		
		private EntityRef<PELICULA> _PELICULA;
		
		private EntityRef<SALA> _SALA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFUNCIONChanging(int value);
    partial void OnIDFUNCIONChanged();
    partial void OnFECHAFUNCIONChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAFUNCIONChanged();
    partial void OnIDPELICULAChanging(int value);
    partial void OnIDPELICULAChanged();
    partial void OnIDCINEChanging(int value);
    partial void OnIDCINEChanged();
    partial void OnIDSALAChanging(int value);
    partial void OnIDSALAChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public FUNCION()
		{
			this._BUTACA = new EntitySet<BUTACA>(new Action<BUTACA>(this.attach_BUTACA), new Action<BUTACA>(this.detach_BUTACA));
			this._BUTACA1 = new EntitySet<BUTACA>(new Action<BUTACA>(this.attach_BUTACA1), new Action<BUTACA>(this.detach_BUTACA1));
			this._FUNCIONENTRADA = new EntitySet<FUNCIONENTRADA>(new Action<FUNCIONENTRADA>(this.attach_FUNCIONENTRADA), new Action<FUNCIONENTRADA>(this.detach_FUNCIONENTRADA));
			this._DETALLERESERVA = new EntitySet<DETALLERESERVA>(new Action<DETALLERESERVA>(this.attach_DETALLERESERVA), new Action<DETALLERESERVA>(this.detach_DETALLERESERVA));
			this._CINE = default(EntityRef<CINE>);
			this._PELICULA = default(EntityRef<PELICULA>);
			this._SALA = default(EntityRef<SALA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFUNCION", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDFUNCION
		{
			get
			{
				return this._IDFUNCION;
			}
			set
			{
				if ((this._IDFUNCION != value))
				{
					this.OnIDFUNCIONChanging(value);
					this.SendPropertyChanging();
					this._IDFUNCION = value;
					this.SendPropertyChanged("IDFUNCION");
					this.OnIDFUNCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAFUNCION", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHAFUNCION
		{
			get
			{
				return this._FECHAFUNCION;
			}
			set
			{
				if ((this._FECHAFUNCION != value))
				{
					this.OnFECHAFUNCIONChanging(value);
					this.SendPropertyChanging();
					this._FECHAFUNCION = value;
					this.SendPropertyChanged("FECHAFUNCION");
					this.OnFECHAFUNCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPELICULA", DbType="Int NOT NULL")]
		public int IDPELICULA
		{
			get
			{
				return this._IDPELICULA;
			}
			set
			{
				if ((this._IDPELICULA != value))
				{
					if (this._PELICULA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPELICULAChanging(value);
					this.SendPropertyChanging();
					this._IDPELICULA = value;
					this.SendPropertyChanged("IDPELICULA");
					this.OnIDPELICULAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCINE", DbType="Int NOT NULL")]
		public int IDCINE
		{
			get
			{
				return this._IDCINE;
			}
			set
			{
				if ((this._IDCINE != value))
				{
					if (this._CINE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCINEChanging(value);
					this.SendPropertyChanging();
					this._IDCINE = value;
					this.SendPropertyChanged("IDCINE");
					this.OnIDCINEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSALA", DbType="Int NOT NULL")]
		public int IDSALA
		{
			get
			{
				return this._IDSALA;
			}
			set
			{
				if ((this._IDSALA != value))
				{
					if (this._SALA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSALAChanging(value);
					this.SendPropertyChanging();
					this._IDSALA = value;
					this.SendPropertyChanged("IDSALA");
					this.OnIDSALAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FUNCION_BUTACA", Storage="_BUTACA", ThisKey="IDFUNCION", OtherKey="IDFUNCION")]
		public EntitySet<BUTACA> BUTACA
		{
			get
			{
				return this._BUTACA;
			}
			set
			{
				this._BUTACA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FUNCION_BUTACA1", Storage="_BUTACA1", ThisKey="IDFUNCION", OtherKey="IDFUNCION")]
		public EntitySet<BUTACA> BUTACA1
		{
			get
			{
				return this._BUTACA1;
			}
			set
			{
				this._BUTACA1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FUNCION_FUNCIONENTRADA", Storage="_FUNCIONENTRADA", ThisKey="IDFUNCION", OtherKey="IDFUNCION")]
		public EntitySet<FUNCIONENTRADA> FUNCIONENTRADA
		{
			get
			{
				return this._FUNCIONENTRADA;
			}
			set
			{
				this._FUNCIONENTRADA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FUNCION_DETALLERESERVA", Storage="_DETALLERESERVA", ThisKey="IDFUNCION", OtherKey="IDFUNCION")]
		public EntitySet<DETALLERESERVA> DETALLERESERVA
		{
			get
			{
				return this._DETALLERESERVA;
			}
			set
			{
				this._DETALLERESERVA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CINE_FUNCION", Storage="_CINE", ThisKey="IDCINE", OtherKey="IDCINE", IsForeignKey=true)]
		public CINE CINE
		{
			get
			{
				return this._CINE.Entity;
			}
			set
			{
				CINE previousValue = this._CINE.Entity;
				if (((previousValue != value) 
							|| (this._CINE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CINE.Entity = null;
						previousValue.FUNCION.Remove(this);
					}
					this._CINE.Entity = value;
					if ((value != null))
					{
						value.FUNCION.Add(this);
						this._IDCINE = value.IDCINE;
					}
					else
					{
						this._IDCINE = default(int);
					}
					this.SendPropertyChanged("CINE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PELICULA_FUNCION", Storage="_PELICULA", ThisKey="IDPELICULA", OtherKey="IDPELICULA", IsForeignKey=true)]
		public PELICULA PELICULA
		{
			get
			{
				return this._PELICULA.Entity;
			}
			set
			{
				PELICULA previousValue = this._PELICULA.Entity;
				if (((previousValue != value) 
							|| (this._PELICULA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PELICULA.Entity = null;
						previousValue.FUNCION.Remove(this);
					}
					this._PELICULA.Entity = value;
					if ((value != null))
					{
						value.FUNCION.Add(this);
						this._IDPELICULA = value.IDPELICULA;
					}
					else
					{
						this._IDPELICULA = default(int);
					}
					this.SendPropertyChanged("PELICULA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALA_FUNCION", Storage="_SALA", ThisKey="IDSALA", OtherKey="IDSALA", IsForeignKey=true)]
		public SALA SALA
		{
			get
			{
				return this._SALA.Entity;
			}
			set
			{
				SALA previousValue = this._SALA.Entity;
				if (((previousValue != value) 
							|| (this._SALA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALA.Entity = null;
						previousValue.FUNCION.Remove(this);
					}
					this._SALA.Entity = value;
					if ((value != null))
					{
						value.FUNCION.Add(this);
						this._IDSALA = value.IDSALA;
					}
					else
					{
						this._IDSALA = default(int);
					}
					this.SendPropertyChanged("SALA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUTACA(BUTACA entity)
		{
			this.SendPropertyChanging();
			entity.FUNCION = this;
		}
		
		private void detach_BUTACA(BUTACA entity)
		{
			this.SendPropertyChanging();
			entity.FUNCION = null;
		}
		
		private void attach_BUTACA1(BUTACA entity)
		{
			this.SendPropertyChanging();
			entity.FUNCION1 = this;
		}
		
		private void detach_BUTACA1(BUTACA entity)
		{
			this.SendPropertyChanging();
			entity.FUNCION1 = null;
		}
		
		private void attach_FUNCIONENTRADA(FUNCIONENTRADA entity)
		{
			this.SendPropertyChanging();
			entity.FUNCION = this;
		}
		
		private void detach_FUNCIONENTRADA(FUNCIONENTRADA entity)
		{
			this.SendPropertyChanging();
			entity.FUNCION = null;
		}
		
		private void attach_DETALLERESERVA(DETALLERESERVA entity)
		{
			this.SendPropertyChanging();
			entity.FUNCION = this;
		}
		
		private void detach_DETALLERESERVA(DETALLERESERVA entity)
		{
			this.SendPropertyChanging();
			entity.FUNCION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FUNCIONENTRADA")]
	public partial class FUNCIONENTRADA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFUNCION;
		
		private int _IDTIPOENTRADA;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private System.Nullable<decimal> _PRECIO;
		
		private EntityRef<FUNCION> _FUNCION;
		
		private EntityRef<TIPOENTRADA> _TIPOENTRADA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFUNCIONChanging(int value);
    partial void OnIDFUNCIONChanged();
    partial void OnIDTIPOENTRADAChanging(int value);
    partial void OnIDTIPOENTRADAChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    partial void OnPRECIOChanging(System.Nullable<decimal> value);
    partial void OnPRECIOChanged();
    #endregion
		
		public FUNCIONENTRADA()
		{
			this._FUNCION = default(EntityRef<FUNCION>);
			this._TIPOENTRADA = default(EntityRef<TIPOENTRADA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFUNCION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFUNCION
		{
			get
			{
				return this._IDFUNCION;
			}
			set
			{
				if ((this._IDFUNCION != value))
				{
					if (this._FUNCION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFUNCIONChanging(value);
					this.SendPropertyChanging();
					this._IDFUNCION = value;
					this.SendPropertyChanged("IDFUNCION");
					this.OnIDFUNCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOENTRADA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTIPOENTRADA
		{
			get
			{
				return this._IDTIPOENTRADA;
			}
			set
			{
				if ((this._IDTIPOENTRADA != value))
				{
					if (this._TIPOENTRADA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOENTRADAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOENTRADA = value;
					this.SendPropertyChanged("IDTIPOENTRADA");
					this.OnIDTIPOENTRADAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRECIO", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PRECIO
		{
			get
			{
				return this._PRECIO;
			}
			set
			{
				if ((this._PRECIO != value))
				{
					this.OnPRECIOChanging(value);
					this.SendPropertyChanging();
					this._PRECIO = value;
					this.SendPropertyChanged("PRECIO");
					this.OnPRECIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FUNCION_FUNCIONENTRADA", Storage="_FUNCION", ThisKey="IDFUNCION", OtherKey="IDFUNCION", IsForeignKey=true)]
		public FUNCION FUNCION
		{
			get
			{
				return this._FUNCION.Entity;
			}
			set
			{
				FUNCION previousValue = this._FUNCION.Entity;
				if (((previousValue != value) 
							|| (this._FUNCION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FUNCION.Entity = null;
						previousValue.FUNCIONENTRADA.Remove(this);
					}
					this._FUNCION.Entity = value;
					if ((value != null))
					{
						value.FUNCIONENTRADA.Add(this);
						this._IDFUNCION = value.IDFUNCION;
					}
					else
					{
						this._IDFUNCION = default(int);
					}
					this.SendPropertyChanged("FUNCION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOENTRADA_FUNCIONENTRADA", Storage="_TIPOENTRADA", ThisKey="IDTIPOENTRADA", OtherKey="IDTIPOENTRADA", IsForeignKey=true)]
		public TIPOENTRADA TIPOENTRADA
		{
			get
			{
				return this._TIPOENTRADA.Entity;
			}
			set
			{
				TIPOENTRADA previousValue = this._TIPOENTRADA.Entity;
				if (((previousValue != value) 
							|| (this._TIPOENTRADA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOENTRADA.Entity = null;
						previousValue.FUNCIONENTRADA.Remove(this);
					}
					this._TIPOENTRADA.Entity = value;
					if ((value != null))
					{
						value.FUNCIONENTRADA.Add(this);
						this._IDTIPOENTRADA = value.IDTIPOENTRADA;
					}
					else
					{
						this._IDTIPOENTRADA = default(int);
					}
					this.SendPropertyChanged("TIPOENTRADA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GENERO")]
	public partial class GENERO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDGENERO;
		
		private string _NOMBRE;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private EntitySet<PELICULA> _PELICULA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDGENEROChanging(int value);
    partial void OnIDGENEROChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public GENERO()
		{
			this._PELICULA = new EntitySet<PELICULA>(new Action<PELICULA>(this.attach_PELICULA), new Action<PELICULA>(this.detach_PELICULA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGENERO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDGENERO
		{
			get
			{
				return this._IDGENERO;
			}
			set
			{
				if ((this._IDGENERO != value))
				{
					this.OnIDGENEROChanging(value);
					this.SendPropertyChanging();
					this._IDGENERO = value;
					this.SendPropertyChanged("IDGENERO");
					this.OnIDGENEROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GENERO_PELICULA", Storage="_PELICULA", ThisKey="IDGENERO", OtherKey="IDGENERO")]
		public EntitySet<PELICULA> PELICULA
		{
			get
			{
				return this._PELICULA;
			}
			set
			{
				this._PELICULA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PELICULA(PELICULA entity)
		{
			this.SendPropertyChanging();
			entity.GENERO = this;
		}
		
		private void detach_PELICULA(PELICULA entity)
		{
			this.SendPropertyChanging();
			entity.GENERO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAIS")]
	public partial class PAIS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPAIS;
		
		private string _NOMBRE;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private EntitySet<PELICULA> _PELICULA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPAISChanging(int value);
    partial void OnIDPAISChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public PAIS()
		{
			this._PELICULA = new EntitySet<PELICULA>(new Action<PELICULA>(this.attach_PELICULA), new Action<PELICULA>(this.detach_PELICULA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPAIS", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPAIS
		{
			get
			{
				return this._IDPAIS;
			}
			set
			{
				if ((this._IDPAIS != value))
				{
					this.OnIDPAISChanging(value);
					this.SendPropertyChanging();
					this._IDPAIS = value;
					this.SendPropertyChanged("IDPAIS");
					this.OnIDPAISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAIS_PELICULA", Storage="_PELICULA", ThisKey="IDPAIS", OtherKey="IDPAIS")]
		public EntitySet<PELICULA> PELICULA
		{
			get
			{
				return this._PELICULA;
			}
			set
			{
				this._PELICULA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PELICULA(PELICULA entity)
		{
			this.SendPropertyChanging();
			entity.PAIS = this;
		}
		
		private void detach_PELICULA(PELICULA entity)
		{
			this.SendPropertyChanging();
			entity.PAIS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PELICULA")]
	public partial class PELICULA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPELICULA;
		
		private string _TITULO;
		
		private string _FECHAESTRENO;
		
		private System.Nullable<int> _IDGENERO;
		
		private System.Nullable<int> _IDPAIS;
		
		private string _SINOPSIS;
		
		private System.Nullable<int> _DURACION;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private System.Nullable<int> _IDTIPOCENSURA;
		
		private EntitySet<FUNCION> _FUNCION;
		
		private EntityRef<GENERO> _GENERO;
		
		private EntityRef<PAIS> _PAIS;
		
		private EntityRef<TIPOCENSURA> _TIPOCENSURA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPELICULAChanging(int value);
    partial void OnIDPELICULAChanged();
    partial void OnTITULOChanging(string value);
    partial void OnTITULOChanged();
    partial void OnFECHAESTRENOChanging(string value);
    partial void OnFECHAESTRENOChanged();
    partial void OnIDGENEROChanging(System.Nullable<int> value);
    partial void OnIDGENEROChanged();
    partial void OnIDPAISChanging(System.Nullable<int> value);
    partial void OnIDPAISChanged();
    partial void OnSINOPSISChanging(string value);
    partial void OnSINOPSISChanged();
    partial void OnDURACIONChanging(System.Nullable<int> value);
    partial void OnDURACIONChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    partial void OnIDTIPOCENSURAChanging(System.Nullable<int> value);
    partial void OnIDTIPOCENSURAChanged();
    #endregion
		
		public PELICULA()
		{
			this._FUNCION = new EntitySet<FUNCION>(new Action<FUNCION>(this.attach_FUNCION), new Action<FUNCION>(this.detach_FUNCION));
			this._GENERO = default(EntityRef<GENERO>);
			this._PAIS = default(EntityRef<PAIS>);
			this._TIPOCENSURA = default(EntityRef<TIPOCENSURA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPELICULA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPELICULA
		{
			get
			{
				return this._IDPELICULA;
			}
			set
			{
				if ((this._IDPELICULA != value))
				{
					this.OnIDPELICULAChanging(value);
					this.SendPropertyChanging();
					this._IDPELICULA = value;
					this.SendPropertyChanged("IDPELICULA");
					this.OnIDPELICULAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITULO", DbType="VarChar(100)")]
		public string TITULO
		{
			get
			{
				return this._TITULO;
			}
			set
			{
				if ((this._TITULO != value))
				{
					this.OnTITULOChanging(value);
					this.SendPropertyChanging();
					this._TITULO = value;
					this.SendPropertyChanged("TITULO");
					this.OnTITULOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAESTRENO", DbType="VarChar(100)")]
		public string FECHAESTRENO
		{
			get
			{
				return this._FECHAESTRENO;
			}
			set
			{
				if ((this._FECHAESTRENO != value))
				{
					this.OnFECHAESTRENOChanging(value);
					this.SendPropertyChanging();
					this._FECHAESTRENO = value;
					this.SendPropertyChanged("FECHAESTRENO");
					this.OnFECHAESTRENOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGENERO", DbType="Int")]
		public System.Nullable<int> IDGENERO
		{
			get
			{
				return this._IDGENERO;
			}
			set
			{
				if ((this._IDGENERO != value))
				{
					if (this._GENERO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGENEROChanging(value);
					this.SendPropertyChanging();
					this._IDGENERO = value;
					this.SendPropertyChanged("IDGENERO");
					this.OnIDGENEROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPAIS", DbType="Int")]
		public System.Nullable<int> IDPAIS
		{
			get
			{
				return this._IDPAIS;
			}
			set
			{
				if ((this._IDPAIS != value))
				{
					if (this._PAIS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPAISChanging(value);
					this.SendPropertyChanging();
					this._IDPAIS = value;
					this.SendPropertyChanged("IDPAIS");
					this.OnIDPAISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SINOPSIS", DbType="VarChar(1000)")]
		public string SINOPSIS
		{
			get
			{
				return this._SINOPSIS;
			}
			set
			{
				if ((this._SINOPSIS != value))
				{
					this.OnSINOPSISChanging(value);
					this.SendPropertyChanging();
					this._SINOPSIS = value;
					this.SendPropertyChanged("SINOPSIS");
					this.OnSINOPSISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DURACION", DbType="Int")]
		public System.Nullable<int> DURACION
		{
			get
			{
				return this._DURACION;
			}
			set
			{
				if ((this._DURACION != value))
				{
					this.OnDURACIONChanging(value);
					this.SendPropertyChanging();
					this._DURACION = value;
					this.SendPropertyChanged("DURACION");
					this.OnDURACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOCENSURA", DbType="Int")]
		public System.Nullable<int> IDTIPOCENSURA
		{
			get
			{
				return this._IDTIPOCENSURA;
			}
			set
			{
				if ((this._IDTIPOCENSURA != value))
				{
					if (this._TIPOCENSURA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOCENSURAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOCENSURA = value;
					this.SendPropertyChanged("IDTIPOCENSURA");
					this.OnIDTIPOCENSURAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PELICULA_FUNCION", Storage="_FUNCION", ThisKey="IDPELICULA", OtherKey="IDPELICULA")]
		public EntitySet<FUNCION> FUNCION
		{
			get
			{
				return this._FUNCION;
			}
			set
			{
				this._FUNCION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GENERO_PELICULA", Storage="_GENERO", ThisKey="IDGENERO", OtherKey="IDGENERO", IsForeignKey=true)]
		public GENERO GENERO
		{
			get
			{
				return this._GENERO.Entity;
			}
			set
			{
				GENERO previousValue = this._GENERO.Entity;
				if (((previousValue != value) 
							|| (this._GENERO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GENERO.Entity = null;
						previousValue.PELICULA.Remove(this);
					}
					this._GENERO.Entity = value;
					if ((value != null))
					{
						value.PELICULA.Add(this);
						this._IDGENERO = value.IDGENERO;
					}
					else
					{
						this._IDGENERO = default(Nullable<int>);
					}
					this.SendPropertyChanged("GENERO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAIS_PELICULA", Storage="_PAIS", ThisKey="IDPAIS", OtherKey="IDPAIS", IsForeignKey=true)]
		public PAIS PAIS
		{
			get
			{
				return this._PAIS.Entity;
			}
			set
			{
				PAIS previousValue = this._PAIS.Entity;
				if (((previousValue != value) 
							|| (this._PAIS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAIS.Entity = null;
						previousValue.PELICULA.Remove(this);
					}
					this._PAIS.Entity = value;
					if ((value != null))
					{
						value.PELICULA.Add(this);
						this._IDPAIS = value.IDPAIS;
					}
					else
					{
						this._IDPAIS = default(Nullable<int>);
					}
					this.SendPropertyChanged("PAIS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOCENSURA_PELICULA", Storage="_TIPOCENSURA", ThisKey="IDTIPOCENSURA", OtherKey="IDTIPOCENSURA", IsForeignKey=true)]
		public TIPOCENSURA TIPOCENSURA
		{
			get
			{
				return this._TIPOCENSURA.Entity;
			}
			set
			{
				TIPOCENSURA previousValue = this._TIPOCENSURA.Entity;
				if (((previousValue != value) 
							|| (this._TIPOCENSURA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOCENSURA.Entity = null;
						previousValue.PELICULA.Remove(this);
					}
					this._TIPOCENSURA.Entity = value;
					if ((value != null))
					{
						value.PELICULA.Add(this);
						this._IDTIPOCENSURA = value.IDTIPOCENSURA;
					}
					else
					{
						this._IDTIPOCENSURA = default(Nullable<int>);
					}
					this.SendPropertyChanged("TIPOCENSURA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FUNCION(FUNCION entity)
		{
			this.SendPropertyChanging();
			entity.PELICULA = this;
		}
		
		private void detach_FUNCION(FUNCION entity)
		{
			this.SendPropertyChanging();
			entity.PELICULA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RESERVA")]
	public partial class RESERVA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRESERVA;
		
		private System.Nullable<int> _IDCLIENTE;
		
		private System.Nullable<int> _IDEMPLEADO;
		
		private System.Nullable<decimal> _TOTAL;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private EntitySet<DETALLERESERVA> _DETALLERESERVA;
		
		private EntityRef<CLIENTE> _CLIENTE;
		
		private EntityRef<EMPLEADO> _EMPLEADO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRESERVAChanging(int value);
    partial void OnIDRESERVAChanged();
    partial void OnIDCLIENTEChanging(System.Nullable<int> value);
    partial void OnIDCLIENTEChanged();
    partial void OnIDEMPLEADOChanging(System.Nullable<int> value);
    partial void OnIDEMPLEADOChanged();
    partial void OnTOTALChanging(System.Nullable<decimal> value);
    partial void OnTOTALChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public RESERVA()
		{
			this._DETALLERESERVA = new EntitySet<DETALLERESERVA>(new Action<DETALLERESERVA>(this.attach_DETALLERESERVA), new Action<DETALLERESERVA>(this.detach_DETALLERESERVA));
			this._CLIENTE = default(EntityRef<CLIENTE>);
			this._EMPLEADO = default(EntityRef<EMPLEADO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRESERVA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDRESERVA
		{
			get
			{
				return this._IDRESERVA;
			}
			set
			{
				if ((this._IDRESERVA != value))
				{
					this.OnIDRESERVAChanging(value);
					this.SendPropertyChanging();
					this._IDRESERVA = value;
					this.SendPropertyChanged("IDRESERVA");
					this.OnIDRESERVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCLIENTE", DbType="Int")]
		public System.Nullable<int> IDCLIENTE
		{
			get
			{
				return this._IDCLIENTE;
			}
			set
			{
				if ((this._IDCLIENTE != value))
				{
					if (this._CLIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCLIENTEChanging(value);
					this.SendPropertyChanging();
					this._IDCLIENTE = value;
					this.SendPropertyChanged("IDCLIENTE");
					this.OnIDCLIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEMPLEADO", DbType="Int")]
		public System.Nullable<int> IDEMPLEADO
		{
			get
			{
				return this._IDEMPLEADO;
			}
			set
			{
				if ((this._IDEMPLEADO != value))
				{
					if (this._EMPLEADO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEMPLEADOChanging(value);
					this.SendPropertyChanging();
					this._IDEMPLEADO = value;
					this.SendPropertyChanged("IDEMPLEADO");
					this.OnIDEMPLEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RESERVA_DETALLERESERVA", Storage="_DETALLERESERVA", ThisKey="IDRESERVA", OtherKey="IDRESERVA")]
		public EntitySet<DETALLERESERVA> DETALLERESERVA
		{
			get
			{
				return this._DETALLERESERVA;
			}
			set
			{
				this._DETALLERESERVA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_RESERVA", Storage="_CLIENTE", ThisKey="IDCLIENTE", OtherKey="IDCLIENTE", IsForeignKey=true)]
		public CLIENTE CLIENTE
		{
			get
			{
				return this._CLIENTE.Entity;
			}
			set
			{
				CLIENTE previousValue = this._CLIENTE.Entity;
				if (((previousValue != value) 
							|| (this._CLIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENTE.Entity = null;
						previousValue.RESERVA.Remove(this);
					}
					this._CLIENTE.Entity = value;
					if ((value != null))
					{
						value.RESERVA.Add(this);
						this._IDCLIENTE = value.IDCLIENTE;
					}
					else
					{
						this._IDCLIENTE = default(Nullable<int>);
					}
					this.SendPropertyChanged("CLIENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADO_RESERVA", Storage="_EMPLEADO", ThisKey="IDEMPLEADO", OtherKey="IDEMPLEADO", IsForeignKey=true)]
		public EMPLEADO EMPLEADO
		{
			get
			{
				return this._EMPLEADO.Entity;
			}
			set
			{
				EMPLEADO previousValue = this._EMPLEADO.Entity;
				if (((previousValue != value) 
							|| (this._EMPLEADO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLEADO.Entity = null;
						previousValue.RESERVA.Remove(this);
					}
					this._EMPLEADO.Entity = value;
					if ((value != null))
					{
						value.RESERVA.Add(this);
						this._IDEMPLEADO = value.IDEMPLEADO;
					}
					else
					{
						this._IDEMPLEADO = default(Nullable<int>);
					}
					this.SendPropertyChanged("EMPLEADO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETALLERESERVA(DETALLERESERVA entity)
		{
			this.SendPropertyChanging();
			entity.RESERVA = this;
		}
		
		private void detach_DETALLERESERVA(DETALLERESERVA entity)
		{
			this.SendPropertyChanging();
			entity.RESERVA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SALA")]
	public partial class SALA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSALA;
		
		private System.Nullable<int> _IDCINE;
		
		private System.Nullable<int> _NUMBUTACAS;
		
		private System.Nullable<int> _NUMEROFILAS;
		
		private System.Nullable<int> _NUMEROCOLUMNAS;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private string _NOMBRE;
		
		private EntitySet<FUNCION> _FUNCION;
		
		private EntityRef<CINE> _CINE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSALAChanging(int value);
    partial void OnIDSALAChanged();
    partial void OnIDCINEChanging(System.Nullable<int> value);
    partial void OnIDCINEChanged();
    partial void OnNUMBUTACASChanging(System.Nullable<int> value);
    partial void OnNUMBUTACASChanged();
    partial void OnNUMEROFILASChanging(System.Nullable<int> value);
    partial void OnNUMEROFILASChanged();
    partial void OnNUMEROCOLUMNASChanging(System.Nullable<int> value);
    partial void OnNUMEROCOLUMNASChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public SALA()
		{
			this._FUNCION = new EntitySet<FUNCION>(new Action<FUNCION>(this.attach_FUNCION), new Action<FUNCION>(this.detach_FUNCION));
			this._CINE = default(EntityRef<CINE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSALA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDSALA
		{
			get
			{
				return this._IDSALA;
			}
			set
			{
				if ((this._IDSALA != value))
				{
					this.OnIDSALAChanging(value);
					this.SendPropertyChanging();
					this._IDSALA = value;
					this.SendPropertyChanged("IDSALA");
					this.OnIDSALAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCINE", DbType="Int")]
		public System.Nullable<int> IDCINE
		{
			get
			{
				return this._IDCINE;
			}
			set
			{
				if ((this._IDCINE != value))
				{
					if (this._CINE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCINEChanging(value);
					this.SendPropertyChanging();
					this._IDCINE = value;
					this.SendPropertyChanged("IDCINE");
					this.OnIDCINEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBUTACAS", DbType="Int")]
		public System.Nullable<int> NUMBUTACAS
		{
			get
			{
				return this._NUMBUTACAS;
			}
			set
			{
				if ((this._NUMBUTACAS != value))
				{
					this.OnNUMBUTACASChanging(value);
					this.SendPropertyChanging();
					this._NUMBUTACAS = value;
					this.SendPropertyChanged("NUMBUTACAS");
					this.OnNUMBUTACASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMEROFILAS", DbType="Int")]
		public System.Nullable<int> NUMEROFILAS
		{
			get
			{
				return this._NUMEROFILAS;
			}
			set
			{
				if ((this._NUMEROFILAS != value))
				{
					this.OnNUMEROFILASChanging(value);
					this.SendPropertyChanging();
					this._NUMEROFILAS = value;
					this.SendPropertyChanged("NUMEROFILAS");
					this.OnNUMEROFILASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMEROCOLUMNAS", DbType="Int")]
		public System.Nullable<int> NUMEROCOLUMNAS
		{
			get
			{
				return this._NUMEROCOLUMNAS;
			}
			set
			{
				if ((this._NUMEROCOLUMNAS != value))
				{
					this.OnNUMEROCOLUMNASChanging(value);
					this.SendPropertyChanging();
					this._NUMEROCOLUMNAS = value;
					this.SendPropertyChanged("NUMEROCOLUMNAS");
					this.OnNUMEROCOLUMNASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALA_FUNCION", Storage="_FUNCION", ThisKey="IDSALA", OtherKey="IDSALA")]
		public EntitySet<FUNCION> FUNCION
		{
			get
			{
				return this._FUNCION;
			}
			set
			{
				this._FUNCION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CINE_SALA", Storage="_CINE", ThisKey="IDCINE", OtherKey="IDCINE", IsForeignKey=true)]
		public CINE CINE
		{
			get
			{
				return this._CINE.Entity;
			}
			set
			{
				CINE previousValue = this._CINE.Entity;
				if (((previousValue != value) 
							|| (this._CINE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CINE.Entity = null;
						previousValue.SALA.Remove(this);
					}
					this._CINE.Entity = value;
					if ((value != null))
					{
						value.SALA.Add(this);
						this._IDCINE = value.IDCINE;
					}
					else
					{
						this._IDCINE = default(Nullable<int>);
					}
					this.SendPropertyChanged("CINE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FUNCION(FUNCION entity)
		{
			this.SendPropertyChanging();
			entity.SALA = this;
		}
		
		private void detach_FUNCION(FUNCION entity)
		{
			this.SendPropertyChanging();
			entity.SALA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SEXO")]
	public partial class SEXO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSEXO;
		
		private string _NOMBRE;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private EntitySet<CLIENTE> _CLIENTE;
		
		private EntitySet<CLIENTE> _CLIENTE1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSEXOChanging(int value);
    partial void OnIDSEXOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public SEXO()
		{
			this._CLIENTE = new EntitySet<CLIENTE>(new Action<CLIENTE>(this.attach_CLIENTE), new Action<CLIENTE>(this.detach_CLIENTE));
			this._CLIENTE1 = new EntitySet<CLIENTE>(new Action<CLIENTE>(this.attach_CLIENTE1), new Action<CLIENTE>(this.detach_CLIENTE1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSEXO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDSEXO
		{
			get
			{
				return this._IDSEXO;
			}
			set
			{
				if ((this._IDSEXO != value))
				{
					this.OnIDSEXOChanging(value);
					this.SendPropertyChanging();
					this._IDSEXO = value;
					this.SendPropertyChanged("IDSEXO");
					this.OnIDSEXOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEXO_CLIENTE", Storage="_CLIENTE", ThisKey="IDSEXO", OtherKey="IDSEXO")]
		public EntitySet<CLIENTE> CLIENTE
		{
			get
			{
				return this._CLIENTE;
			}
			set
			{
				this._CLIENTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SEXO_CLIENTE1", Storage="_CLIENTE1", ThisKey="IDSEXO", OtherKey="IDSEXO")]
		public EntitySet<CLIENTE> CLIENTE1
		{
			get
			{
				return this._CLIENTE1;
			}
			set
			{
				this._CLIENTE1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CLIENTE(CLIENTE entity)
		{
			this.SendPropertyChanging();
			entity.SEXO = this;
		}
		
		private void detach_CLIENTE(CLIENTE entity)
		{
			this.SendPropertyChanging();
			entity.SEXO = null;
		}
		
		private void attach_CLIENTE1(CLIENTE entity)
		{
			this.SendPropertyChanging();
			entity.SEXO1 = this;
		}
		
		private void detach_CLIENTE1(CLIENTE entity)
		{
			this.SendPropertyChanging();
			entity.SEXO1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOCENSURA")]
	public partial class TIPOCENSURA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOCENSURA;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<PELICULA> _PELICULA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOCENSURAChanging(int value);
    partial void OnIDTIPOCENSURAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public TIPOCENSURA()
		{
			this._PELICULA = new EntitySet<PELICULA>(new Action<PELICULA>(this.attach_PELICULA), new Action<PELICULA>(this.detach_PELICULA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOCENSURA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTIPOCENSURA
		{
			get
			{
				return this._IDTIPOCENSURA;
			}
			set
			{
				if ((this._IDTIPOCENSURA != value))
				{
					this.OnIDTIPOCENSURAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOCENSURA = value;
					this.SendPropertyChanged("IDTIPOCENSURA");
					this.OnIDTIPOCENSURAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOCENSURA_PELICULA", Storage="_PELICULA", ThisKey="IDTIPOCENSURA", OtherKey="IDTIPOCENSURA")]
		public EntitySet<PELICULA> PELICULA
		{
			get
			{
				return this._PELICULA;
			}
			set
			{
				this._PELICULA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PELICULA(PELICULA entity)
		{
			this.SendPropertyChanging();
			entity.TIPOCENSURA = this;
		}
		
		private void detach_PELICULA(PELICULA entity)
		{
			this.SendPropertyChanging();
			entity.TIPOCENSURA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOCINE")]
	public partial class TIPOCINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOCINE;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<CINE> _CINE;
		
		private EntitySet<CINE> _CINE1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOCINEChanging(int value);
    partial void OnIDTIPOCINEChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public TIPOCINE()
		{
			this._CINE = new EntitySet<CINE>(new Action<CINE>(this.attach_CINE), new Action<CINE>(this.detach_CINE));
			this._CINE1 = new EntitySet<CINE>(new Action<CINE>(this.attach_CINE1), new Action<CINE>(this.detach_CINE1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOCINE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTIPOCINE
		{
			get
			{
				return this._IDTIPOCINE;
			}
			set
			{
				if ((this._IDTIPOCINE != value))
				{
					this.OnIDTIPOCINEChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOCINE = value;
					this.SendPropertyChanged("IDTIPOCINE");
					this.OnIDTIPOCINEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOCINE_CINE", Storage="_CINE", ThisKey="IDTIPOCINE", OtherKey="IDTIPOCINE")]
		public EntitySet<CINE> CINE
		{
			get
			{
				return this._CINE;
			}
			set
			{
				this._CINE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOCINE_CINE1", Storage="_CINE1", ThisKey="IDTIPOCINE", OtherKey="IDTIPOCINE")]
		public EntitySet<CINE> CINE1
		{
			get
			{
				return this._CINE1;
			}
			set
			{
				this._CINE1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CINE(CINE entity)
		{
			this.SendPropertyChanging();
			entity.TIPOCINE = this;
		}
		
		private void detach_CINE(CINE entity)
		{
			this.SendPropertyChanging();
			entity.TIPOCINE = null;
		}
		
		private void attach_CINE1(CINE entity)
		{
			this.SendPropertyChanging();
			entity.TIPOCINE1 = this;
		}
		
		private void detach_CINE1(CINE entity)
		{
			this.SendPropertyChanging();
			entity.TIPOCINE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOEMPLEADO")]
	public partial class TIPOEMPLEADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOEMPLEADO;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<EMPLEADO> _EMPLEADO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOEMPLEADOChanging(int value);
    partial void OnIDTIPOEMPLEADOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public TIPOEMPLEADO()
		{
			this._EMPLEADO = new EntitySet<EMPLEADO>(new Action<EMPLEADO>(this.attach_EMPLEADO), new Action<EMPLEADO>(this.detach_EMPLEADO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOEMPLEADO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTIPOEMPLEADO
		{
			get
			{
				return this._IDTIPOEMPLEADO;
			}
			set
			{
				if ((this._IDTIPOEMPLEADO != value))
				{
					this.OnIDTIPOEMPLEADOChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOEMPLEADO = value;
					this.SendPropertyChanged("IDTIPOEMPLEADO");
					this.OnIDTIPOEMPLEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOEMPLEADO_EMPLEADO", Storage="_EMPLEADO", ThisKey="IDTIPOEMPLEADO", OtherKey="IDTIPOEMPLEADO")]
		public EntitySet<EMPLEADO> EMPLEADO
		{
			get
			{
				return this._EMPLEADO;
			}
			set
			{
				this._EMPLEADO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLEADO(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.TIPOEMPLEADO = this;
		}
		
		private void detach_EMPLEADO(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.TIPOEMPLEADO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOENTRADA")]
	public partial class TIPOENTRADA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOENTRADA;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<FUNCIONENTRADA> _FUNCIONENTRADA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOENTRADAChanging(int value);
    partial void OnIDTIPOENTRADAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public TIPOENTRADA()
		{
			this._FUNCIONENTRADA = new EntitySet<FUNCIONENTRADA>(new Action<FUNCIONENTRADA>(this.attach_FUNCIONENTRADA), new Action<FUNCIONENTRADA>(this.detach_FUNCIONENTRADA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOENTRADA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTIPOENTRADA
		{
			get
			{
				return this._IDTIPOENTRADA;
			}
			set
			{
				if ((this._IDTIPOENTRADA != value))
				{
					this.OnIDTIPOENTRADAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOENTRADA = value;
					this.SendPropertyChanged("IDTIPOENTRADA");
					this.OnIDTIPOENTRADAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOENTRADA_FUNCIONENTRADA", Storage="_FUNCIONENTRADA", ThisKey="IDTIPOENTRADA", OtherKey="IDTIPOENTRADA")]
		public EntitySet<FUNCIONENTRADA> FUNCIONENTRADA
		{
			get
			{
				return this._FUNCIONENTRADA;
			}
			set
			{
				this._FUNCIONENTRADA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FUNCIONENTRADA(FUNCIONENTRADA entity)
		{
			this.SendPropertyChanging();
			entity.TIPOENTRADA = this;
		}
		
		private void detach_FUNCIONENTRADA(FUNCIONENTRADA entity)
		{
			this.SendPropertyChanging();
			entity.TIPOENTRADA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETALLERESERVA")]
	public partial class DETALLERESERVA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRESERVA;
		
		private int _IDCLIENTE;
		
		private System.Nullable<decimal> _PRECIO;
		
		private System.Nullable<int> _IDFUNCION;
		
		private System.Nullable<int> _IDBUTACA;
		
		private System.Nullable<bool> _BHABILITADO;
		
		private EntityRef<CLIENTE> _CLIENTE;
		
		private EntityRef<FUNCION> _FUNCION;
		
		private EntityRef<RESERVA> _RESERVA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRESERVAChanging(int value);
    partial void OnIDRESERVAChanged();
    partial void OnIDCLIENTEChanging(int value);
    partial void OnIDCLIENTEChanged();
    partial void OnPRECIOChanging(System.Nullable<decimal> value);
    partial void OnPRECIOChanged();
    partial void OnIDFUNCIONChanging(System.Nullable<int> value);
    partial void OnIDFUNCIONChanged();
    partial void OnIDBUTACAChanging(System.Nullable<int> value);
    partial void OnIDBUTACAChanged();
    partial void OnBHABILITADOChanging(System.Nullable<bool> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public DETALLERESERVA()
		{
			this._CLIENTE = default(EntityRef<CLIENTE>);
			this._FUNCION = default(EntityRef<FUNCION>);
			this._RESERVA = default(EntityRef<RESERVA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRESERVA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDRESERVA
		{
			get
			{
				return this._IDRESERVA;
			}
			set
			{
				if ((this._IDRESERVA != value))
				{
					if (this._RESERVA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRESERVAChanging(value);
					this.SendPropertyChanging();
					this._IDRESERVA = value;
					this.SendPropertyChanged("IDRESERVA");
					this.OnIDRESERVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCLIENTE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCLIENTE
		{
			get
			{
				return this._IDCLIENTE;
			}
			set
			{
				if ((this._IDCLIENTE != value))
				{
					if (this._CLIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCLIENTEChanging(value);
					this.SendPropertyChanging();
					this._IDCLIENTE = value;
					this.SendPropertyChanged("IDCLIENTE");
					this.OnIDCLIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRECIO", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PRECIO
		{
			get
			{
				return this._PRECIO;
			}
			set
			{
				if ((this._PRECIO != value))
				{
					this.OnPRECIOChanging(value);
					this.SendPropertyChanging();
					this._PRECIO = value;
					this.SendPropertyChanged("PRECIO");
					this.OnPRECIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFUNCION", DbType="Int")]
		public System.Nullable<int> IDFUNCION
		{
			get
			{
				return this._IDFUNCION;
			}
			set
			{
				if ((this._IDFUNCION != value))
				{
					if (this._FUNCION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFUNCIONChanging(value);
					this.SendPropertyChanging();
					this._IDFUNCION = value;
					this.SendPropertyChanged("IDFUNCION");
					this.OnIDFUNCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBUTACA", DbType="Int")]
		public System.Nullable<int> IDBUTACA
		{
			get
			{
				return this._IDBUTACA;
			}
			set
			{
				if ((this._IDBUTACA != value))
				{
					this.OnIDBUTACAChanging(value);
					this.SendPropertyChanging();
					this._IDBUTACA = value;
					this.SendPropertyChanged("IDBUTACA");
					this.OnIDBUTACAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Bit")]
		public System.Nullable<bool> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_DETALLERESERVA", Storage="_CLIENTE", ThisKey="IDCLIENTE", OtherKey="IDCLIENTE", IsForeignKey=true)]
		public CLIENTE CLIENTE
		{
			get
			{
				return this._CLIENTE.Entity;
			}
			set
			{
				CLIENTE previousValue = this._CLIENTE.Entity;
				if (((previousValue != value) 
							|| (this._CLIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENTE.Entity = null;
						previousValue.DETALLERESERVA.Remove(this);
					}
					this._CLIENTE.Entity = value;
					if ((value != null))
					{
						value.DETALLERESERVA.Add(this);
						this._IDCLIENTE = value.IDCLIENTE;
					}
					else
					{
						this._IDCLIENTE = default(int);
					}
					this.SendPropertyChanged("CLIENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FUNCION_DETALLERESERVA", Storage="_FUNCION", ThisKey="IDFUNCION", OtherKey="IDFUNCION", IsForeignKey=true)]
		public FUNCION FUNCION
		{
			get
			{
				return this._FUNCION.Entity;
			}
			set
			{
				FUNCION previousValue = this._FUNCION.Entity;
				if (((previousValue != value) 
							|| (this._FUNCION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FUNCION.Entity = null;
						previousValue.DETALLERESERVA.Remove(this);
					}
					this._FUNCION.Entity = value;
					if ((value != null))
					{
						value.DETALLERESERVA.Add(this);
						this._IDFUNCION = value.IDFUNCION;
					}
					else
					{
						this._IDFUNCION = default(Nullable<int>);
					}
					this.SendPropertyChanged("FUNCION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RESERVA_DETALLERESERVA", Storage="_RESERVA", ThisKey="IDRESERVA", OtherKey="IDRESERVA", IsForeignKey=true)]
		public RESERVA RESERVA
		{
			get
			{
				return this._RESERVA.Entity;
			}
			set
			{
				RESERVA previousValue = this._RESERVA.Entity;
				if (((previousValue != value) 
							|| (this._RESERVA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RESERVA.Entity = null;
						previousValue.DETALLERESERVA.Remove(this);
					}
					this._RESERVA.Entity = value;
					if ((value != null))
					{
						value.DETALLERESERVA.Add(this);
						this._IDRESERVA = value.IDRESERVA;
					}
					else
					{
						this._IDRESERVA = default(int);
					}
					this.SendPropertyChanged("RESERVA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
